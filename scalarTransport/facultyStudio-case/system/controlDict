/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs
(
    "libOpenFOAM.so"
    "libincompressibleTurbulenceModels.so"
);

application     BBPScalarFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         300;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   20;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           4;

functions
{
     probes
     {
         // Where to load it from
         libs            ( "libsampling.so" );

         type            probes;

         // Name of the directory for probe data
         name            probes;

         // Write at same frequency as fields
         writeControl   timeStep;    
         writeInterval  1;

         // Fields to be probed
         fields
         (
             k U C T
         );

         probeLocations
         (
             ( 0  0  1.6 )
         );
     }
    phiout-door
    {
        type            surfaceFieldValue;
        libs            ("libfieldFunctionObjects.so");

        log             false;
        writeControl    timeStep;
        writeFields     true;

        surfaceFormat   none;
        regionType      patch;
        name            door;

        operation       sum;
        fields          (phi);
    }
    cout-door
    {
        type            surfaceFieldValue;
        libs            ("libfieldFunctionObjects.so");

        log             false;
        writeControl    timeStep;
        writeFields     true;

        surfaceFormat   none;
        regionType      patch;
        name            door;

        operation       weightedSum;
        weightField     C;
        fields          (phi);
    }
    CMean
    {
        type                    fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled               true;
        writeControl    adjustableRunTime;
        writeInterval   20;
        timeStart             0;
        timeEnd               300;
        resetOnOutput     false;

        fields
        (
            C
            {
                mean           on;
                prime2Mean  off;
                base           time;
            }
        );
    }

}

// ************************************************************************* //
